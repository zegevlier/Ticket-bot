// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum PingType {
  ROLE
  USER
}

enum LogType {
  CREATETICKET
  MESSAGE
  CLOSE
  COMMENT
  NOCLOSE
  YESCLOSE
  BLACKLIST
  UNBLACKLIST
}

model User {
  id             String  @id
  blacklisted    Boolean @default(false)
  pingPreference Boolean @default(true)
}

model Ticket {
  ticketId       String   @id @default(cuid())
  channelId      String
  userId         String
  catagoryId     String
  closed         Boolean  @default(false)
  closedId       String? // ID of who closed the channel.
  closedReason   String? // Reason for closing the channel.
  closable       Boolean  @default(true)
  closableReason String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  activePings    Ping[]
  messages       Logs[]
}

model Catagory {
  catagoryId    String   @id @default(cuid())
  name          String
  description   String
  pingingRoles  String[]
  disCatagoryId String
  openMessage   String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Ping {
  pingId    String   @id @default(cuid())
  id        String
  type      PingType
  createdAt DateTime @default(now())
  Ticket    Ticket?  @relation(fields: [ticketId], references: [ticketId])
  ticketId  String?
}

model Logs {
  logId     String   @id @default(cuid())
  userId    String
  type      LogType
  message   String?
  extra     String?
  anonymous Boolean  @default(false)
  createdAt DateTime @default(now())
  Ticket    Ticket?  @relation(fields: [ticketId], references: [ticketId])
  ticketId  String?
}
